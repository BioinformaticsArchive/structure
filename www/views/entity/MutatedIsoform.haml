- entity_card = EntityCard.new(entity)

- entity_card.name = "MutatedIsoform"
- entity_card.long_name = entity

- entity_card.meta do
  %dl
    - if entity.protein
      %dt Protein
      %dd= entity.protein.link

    - if entity.protein.gene
      %dt Gene
      %dd= entity.protein.gene.link

    %dt Consequence
    %dd= entity.consequence

    %dt Change
    %dd= entity.change

    %dt Damaged? (based on RadialSVM score or truncating mutations)
    %dd= entity.damaged? ? "true" : "false"

    - if entity.truncated
      - ablated_domains = entity.ablated_domain_positions
      - if ablated_domains.any?
        %dt Ablated IntePro domains
        %dd
          %ul.clean_list
            - ablated_domains.each do |domain,s,e|
              %li
                - InterProDomain.setup(domain, entity.organism)
                - pfam = domain.pfam
                - if pfam
                  == #{domain.link} (#{pfam.link pfam}) [#{s} - #{e}]
                - else
                  == #{domain.link} [#{s} - #{e}]

    %dt DbNSFP RadialSVM score (damaged if above 0)
    %dd= entity.dbnsfp_radialSVM_score || "NA"

    - if defined? DbNSFP
      %dt Mutation Assessor (damaged if above 1.938)
      %dd= entity.mutation_assessor_scores || "NA"

      %dt SIFT (p-value; damaged if close to 0)
      %dd= entity.sift_scores || "NA"

- entity_card.action_controller = default_action_controller entity

= entity_card_render entity_card  do
  - if entity =~ /ENSP/
    = tool :secondary_structure, :protein => entity.protein, :positions => entity.change.scan(/\d+/)
