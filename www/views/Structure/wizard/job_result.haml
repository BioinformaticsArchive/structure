- if job 
  .job_control
    = workflow_partial('job_result/job_control', workflow, task, locals)

- mis = result.column("Mutated Isoform").values.flatten.compact.uniq
- MutatedIsoform.setup(mis, result.namespace)

- organism = result.namespace
- proteins = {}
- mis.collect{|mi| protein = mi.partition(":").first; proteins[protein] ||= []; proteins[protein] << mi}

%h2 Wizard results

:documentation 

  The result of the analysis are a series of tables, available above as `job
  files`. These tables are combined into a bit unique table, available when
  you select to see the `raw` result. For simplicity, the results are also
  shown below grouped by isoform. Additionally, damage predictions for several
  predictors are also made available (extracted from
  [dbNSFP](https://sites.google.com/site/jpopgen/dbNSFP)).   

  To assist computational analyses downstream, there is a one-to-one
  correspondence between values in related fields. This helps track where the
  annotations actually come from. For instance, if the field `Appris Features`
  lists three results separated by comas (vertical bars, i.e. '|', in the raw TSV files), then the field `Appris Feature
  Descriptions` will also have three entries separated by commas
  (incomplete/missing information fields will show as empty strings between
  commas). Note that in the combined tables, this correspondence is only held
  between *related* fields. 
  
  Tables for neighbours and interfaces require one more level of separation,
  since a single residue may have several neighbours, or interface information
  may be found in different PDBs. The same principle of one-to-one
  correspondence holds for each comma-separated value, and for each
  semicolon-separated value inside it. We favour this convention for
  computational reasons, but beware of repeated results.

  Although the links in this page may show human-friendly names (such as for
  InterPro domains; or for mutated isoforms, which have the gene name
  prepended), the original tables contain just plain IDs. The excel versions of
  the tables below also include human-friendly names.


%h3 Isoform overview

%dl.rbbt_tabs
  - first = true
  - proteins.each do |protein,protein_mis|
    - protein = Protein.setup(protein.dup, "Ensembl Protein ID", organism)
    - name = protein.name


    %dt.next(class="#{first ? 'show' : ''}")=name
    %dd(class="#{first ? 'show' : ''}")

      %p= protein.link "Examine protein in detail"

      = partial_render('partials/protein_mutation_overview', :protein => protein, :protein_mis => protein_mis, :organism => organism, :result => result)
    - first = false

%hr

%h3 
  Damaged predictions 
  (from 
  %a(href="https://sites.google.com/site/jpopgen/dbNSFP")< dbNSFP
  \)

= table :table_id => "dbNSFP annotation (-999 are missing values)" do
  - tsv = DbNSFP.job(:annotate, job.clean_name, :mutations => mis.select{|mi| mi.consequence == "MISS-SENSE"}).run
  - good_fields = tsv.fields.select{|f| f =~  /_score/ }
  - tsv.slice(good_fields)
